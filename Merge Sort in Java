
class MergeSort {
    
    public void mergeSort(int[] arr, int start, int end){
        if(start < end){
            int mid = start + (end-start)/2;
            mergeSort(arr,start,mid);
            mergeSort(arr,mid+1,end);
            merge(arr,start,mid,end);
        }
       
    }
    
    public void merge(int[] arr, int start,int mid, int end){
       int len1 = mid-start+1;
       int len2 = end-mid;
       
       int[] leftArr = new int[len1];
       int[] rightArr = new int[len2];
       
       for(int i=0; i<len1; i++){
           leftArr[i] = arr[start + i];
       }
       for(int j=0; j<len2; j++){
           rightArr[j] = arr[mid+1 + j];
       }
       
       int i=0;
       int j=0;
       int k = start;
       while(i<len1 && j<len2){
           if(leftArr[i] < rightArr[j]){
               arr[k] = leftArr[i];
               i++;
           }else{
               arr[k] = rightArr[j];
               j++;
           }
           k++;
       }
       
       while(i<len1){
           arr[k] = leftArr[i];
           i++;
           k++;
       }
       
       while(j<len2){
           arr[k] = rightArr[j];
           j++;
           k++;
       }
       
       
    }
    
    public void display(int[] arr){
        for(int i=0; i<arr.length; i++){
            System.out.print(arr[i] + " ");
        }
        System.out.println("\n");
    }
    
    public static void main(String[] args) {
        int[] arr = new int[]{70,40,30,60,80,90,50,20,10};
        MergeSort ob = new MergeSort();
        ob.display(arr);
        int size= arr.length;
       
        ob.mergeSort(arr,0,size-1);
        
        ob.display(arr);
        
    }
}
